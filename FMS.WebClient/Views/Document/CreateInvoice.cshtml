@model FMS.Services.Models.Document.InvoiceDocumentServiceModel;
@using System;
@using System.Linq;
@{
    ViewData["Title"] = "Create Invoice";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .height {
        min-height: 200px;
        color: #000 !important;
        padding: 20px;
    }

    .icon {
        font-size: 47px;
        color: #5CB85C;
    }

    .iconbig {
        font-size: 77px;
        color: #5CB85C;
    }

    .table {
        color: #000 !important;
        text-align: left !important;
    }

        .table input {
            width: 100%;
        }

        .table > tbody > tr > .emptyrow {
            border-top: none;
        }

        .table > thead > tr > .emptyrow {
            border-bottom: none;
        }

        .table > tbody > tr > .highrow {
            border-top: 3px solid;
        }
</style>

<main class="page request-page">
    <section class="request-form dark bg-grey">
        <div class="container-fluid container-decor text-center">
            <h1>Invoice</h1>
        </div>

        <div class="container-fluid">
            <div class="row">
                <div class="col-xs-12">
                    <div class="row">
                        <div class="col-xs-6 pull-left">
                            <div class="panel panel-default height">

                                <div>Reciever: @Model.RecieverCompany.Name</div>
                                <div>Address: @Model.RecieverCompany.Address</div>
                                <div>Bulstat: @Model.RecieverCompany.Bulstat</div>
                                <div>Tax number:@Model.RecieverCompany.TaxNumber</div>

                                @{
                                    var mol = Model.RecieverCompany.StringProps.FirstOrDefault(p => p.Name == "MOL");
                                    if (mol != null)
                                    {
                                        <p>MOL: @mol.Value</p>
                                    }
                                    else
                                    {
                                        <p>MOL: </p>
                                    }
                                }

                            </div>
                        </div>
                        <div class="col-xs-6">
                            <div class="panel panel-default height">
                                <div>Supplier: @Model.SupplierCompany.Name</div>
                                <div>Address: @Model.SupplierCompany.Address</div>
                                <div>Bulstat: @Model.SupplierCompany.Bulstat</div>
                                <div>Tax number: @Model.SupplierCompany.TaxNumber</div>
                                @{
                                    mol = Model.SupplierCompany.StringProps.FirstOrDefault(p => p.Name == "MOL");
                                    if (mol != null)
                                    {
                                        <div>MOL: @mol.Value</div>
                                    }
                                    else
                                    {
                                        <div>MOL: </div>
                                    }
                                }

                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h3 class="text-center"><strong>Invoice №: @Model.InvoiceNumber</strong></h3>
                            <h5 class="text-center"><strong>Date: @Model.DateTime</strong></h5>
                        </div>
                        <div class="panel-body">
                            <div class="table-responsive">
                                <table class="table table-condensed" id="empTable">
                                    <thead>
                                        <tr>
                                            <td>
                                                <input type="button" class="form-control" id="addRow" value="Add Row" onclick="addRow()" />
                                            </td>
                                            <td class="text-center">Row Number</td>
                                            <td class="text-left"><strong>Service</strong></td>
                                            <td class="text-left"><strong>Qty</strong></td>
                                            <td class="text-right"><strong>Price</strong></td>
                                            <td class="text-right"><strong>Total</strong></td>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var row in Model.Rows)
                                        {
                                        <tr>
                                            <td class="text-center"></td>
                                            <td class="text-center">@row.RowNumber</td>
                                            <td class="text-left">@row.DocumentRowStringProps.FirstOrDefault(p => p.Name == "RowDescription").Value</td>
                                            <td class="text-left">@row.DocumentRowNumericProps.FirstOrDefault(p => p.Name == "Qty").Value</td>
                                            <td class="text-right">@row.DocumentRowNumericProps.FirstOrDefault(p => p.Name == "UnitPrice").Value</td>
                                            <td class="text-right">@row.DocumentRowNumericProps.FirstOrDefault(p => p.Name == "TotalPrice").Value</td>
                                        </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="btn-group btn-group-justified">
                <div class="btn-group" style="padding-right: 10px">
                    <button  class="btn btn-danger" data-toggle="modal" data-target="#confirm">Confirm invoice</button>
                </div>
                <div class="btn-group">
                    <button  onclick="location.href='@Url.Action("Index", "Home" )'" class="btn btn-primary">Cancel</button>
                </div>
            </div>

            <div class="modal fade" id="confirm" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-body">
                            <h4>
                                Are you sure you want to confirm this invoice?
                            </h4>
                            <div class="btn-group btn-group-justified">
                                <div class="btn-group" style="padding-right: 10px">
                                    <button onclick="location.href='@Url.Action("ConfirmInvoice", "Document" )' + '?requestID=' + @ViewData["requestID"] " class="btn btn-danger">Confirm</button>
                                </div>
                                <div class="btn-group">
                                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</main>





<script>
    var arrHead = new Array();
    arrHead = ['', 'RowNumber', 'Service', 'Qty', 'Price', 'Total']; // table headers.

    // function to add new row.
    function addRow() {
        var empTab = document.getElementById('empTable');

        var rowCnt = empTab.rows.length;    // get the number of rows.
        var tr = empTab.insertRow(rowCnt); // table row.
        tr = empTab.insertRow(rowCnt);

        for (var c = 0; c < arrHead.length; c++) {
            var td = document.createElement('td');          // TABLE DEFINITION.
            td = tr.insertCell(c);

            if (c == 0) {   // if its the first column of the table.
                // add a button control.
                var button = document.createElement('input');

                // set the attributes.
                button.setAttribute('type', 'button');
                button.setAttribute('value', 'Remove');
                button.setAttribute('class', 'form-control');

                // add button's "onclick" event.
                button.setAttribute('onclick', 'removeRow(this)');

                td.appendChild(button);
            }
            else if (c == 1) {
                // the 2nd, 3rd and 4th column, will have textbox.
                var ele = document.createElement('input');
                ele.setAttribute('type', 'text');
                @*ele.setAttribute('id', @row.RowNumber);*@
                ele.setAttribute('value', '');
                ele.setAttribute('class', 'form-control');


                td.appendChild(ele);
            }
            else if (c == 2) {
                // the 2nd, 3rd and 4th column, will have textbox.
                var ele = document.createElement('input');
                ele.setAttribute('type', 'text');
                @*ele.setAttribute('id', @row.DocumentRowStringProps.FirstOrDefault(p => p.Name == "RowDescription").Value);*@
                ele.setAttribute('value', '');
                ele.setAttribute('class', 'form-control');

                td.appendChild(ele);
            }
                        else if (c == 3) {
                // the 2nd, 3rd and 4th column, will have textbox.
                var ele = document.createElement('input');
                ele.setAttribute('type', 'text');
                @*ele.setAttribute('id', @row.DocumentRowNumericProps.FirstOrDefault(p => p.Name == "Qty").Value);*@
                ele.setAttribute('value', '');
                ele.setAttribute('class', 'form-control');

                td.appendChild(ele);
            }
                        else if (c == 4) {
                // the 2nd, 3rd and 4th column, will have textbox.
                var ele = document.createElement('input');
                ele.setAttribute('type', 'text');
                @*ele.setAttribute('id', @row.DocumentRowNumericProps.FirstOrDefault(p => p.Name == "UnitPrice").Value);*@
                ele.setAttribute('value', '');
                ele.setAttribute('class', 'form-control');

                td.appendChild(ele);
            }
                        else {
                // the 2nd, 3rd and 4th column, will have textbox.
                var ele = document.createElement('input');
                ele.setAttribute('type', 'text');
                @*ele.setAttribute('id', @row.DocumentRowNumericProps.FirstOrDefault(p => p.Name == "TotalPrice").Value);*@
                ele.setAttribute('value', '');
                ele.setAttribute('class', 'form-control');

                td.appendChild(ele);
            }
        }
    }

    // function to delete a row.
    function removeRow(oButton) {
        var empTab = document.getElementById('empTable');
        empTab.deleteRow(oButton.parentNode.parentNode.rowIndex); // buttton -> td -> tr
    }

</script>
